/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.9.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'java-library-distribution'
    id "com.github.hierynomus.license" version "0.15.0"
}

version '0.0.2'

distributions {
    main {
        distributionBaseName = 'zipgw-extension'
        contents {
            from('src/main/resources') {
                include '*Information.yaml'
            }
        }
    }
}

repositories {
    mavenLocal()
    // use github packages from parrot-ha hub
    maven {
        name "ParrotHubGitHub"
        url "https://maven.pkg.github.com/parrot-ha/hub"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }

    // Use JCenter for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // the following will be provided by the parrot-hub classpath at runtime.
    compileOnly 'com.parrotha:parrothub-core:0.3.7'
    compileOnly 'com.parrotha:parrothub-integration-common:0.3.7'
    compileOnly 'com.parrotha:parrothub-zwave-common:0.3.7'

    implementation 'org.eclipse.californium:scandium:2.6.6'

    compileOnly "org.apache.logging.log4j:log4j-slf4j-impl:2.14.0"
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-api', version: "2.14.0"
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "2.14.0"
    compileOnly group: 'org.codehaus.groovy', name: 'groovy-json', version: "3.0.9"

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

license {
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    header rootProject.file('header.txt')
    strictCheck true
    ignoreFailures true
    skipExistingHeaders false
    includes(["**/*.java", "**/*.groovy"])
}

jar {
    archiveBaseName = 'zipgw-integration'
}
